{"title":"对比Python的filetype和magic库检测文件类型","date":"2020-09-17T21:47:45.000Z","date_formatted":{"ll":"2020年9月17日","L":"2020/09/17","MM-DD":"09-17"},"link":"2020/09/17/对比Python的filetype和magic库检测文件类型","tags":["Python","文件目录遍历","文件类型检测"],"categories":["技术"],"updated":"2022-11-19T15:43:12.598Z","content":"<h4 id=\"1.-需求场景和测试结论\">1. 需求场景和测试结论<a title=\"#1.-需求场景和测试结论\" href=\"#1.-需求场景和测试结论\"></a></h4>\n<p>**测试环境：**python 3.7.x | windows 10 | debian 10</p>\n<p> 最近写了一个Webshell在线检测接口，其中需要对用户上传文件类型做检测。最简单的方式是可以直接获取文件后缀名，但这种方法不准确，用户可以更改后缀名上传文件。网上找了一些资料，发现Python的filetype和magic库都可以进行文件类型的检测。以下是一些可用在其他场景的通用方法可以作为参考。</p>\n<p> 在使用了这两种库进行测试之后，得出以下结论：</p>\n<blockquote>\n<p>a. 可以检测出视频、音频、图片、压缩文件、PDF文件等被修改后缀的原格式。</p>\n<p>b. magic库更可靠更详细，filetype会出现误检测和无结果。</p>\n</blockquote>\n<h4 id=\"2.-获取文件后缀名的方法\">2. 获取文件后缀名的方法<a title=\"#2.-获取文件后缀名的方法\" href=\"#2.-获取文件后缀名的方法\"></a></h4>\n<h5 id=\"2.1-使用正则表达式\">2.1 使用正则表达式<a title=\"#2.1-使用正则表达式\" href=\"#2.1-使用正则表达式\"></a></h5>\n<pre><code class=\"language-python\">import re\n\nfile_name = &quot;C:\\\\Users\\Dell\\\\Desktop\\\\11111111111\\\\test.php.txt.asp&quot;\nfstr = re.search(r'.*\\.(.*)$', file_name, re.I).group(1)\nprint(fstr)\t# &quot;asp&quot;\n</code></pre>\n<h5 id=\"2.2-使用os.path.basename()方法\">2.2 使用os.path.basename()方法<a title=\"#2.2-使用os.path.basename()方法\" href=\"#2.2-使用os.path.basename()方法\"></a></h5>\n<p> Unix命令行中的<code>file &lt;文件路径&gt;</code>命令，就是通过该方式实现功能的。</p>\n<pre><code class=\"language-python\">import os\n\nfile_name = &quot;/home/test/test.json.mp3.jsp&quot;\nfstr = os.path.basename(file_name).split('.')[-1].lower()\nprint(fstr)\t# &quot;jsp&quot;\n</code></pre>\n<h4 id=\"3.-python的filetype和magic库安装\">3. Python的filetype和magic库安装<a title=\"#3.-python的filetype和magic库安装\" href=\"#3.-python的filetype和magic库安装\"></a></h4>\n<h5 id=\"3.1-filetype\">3.1 <a href=\"https://github.com/h2non/filetype.py\">filetype</a><a title=\"#3.1-filetype\" href=\"#3.1-filetype\"></a></h5>\n<pre><code>pip install filetype\n</code></pre>\n<h5 id=\"3.2-magic\">3.2 <a href=\"https://github.com/ahupp/python-magic\">magic</a><a title=\"#3.2-magic\" href=\"#3.2-magic\"></a></h5>\n<pre><code># Linux下安装:\npip install python-magic\n\n# OSX下安装(需要先安装libmagic依赖项):\nbrew install libmagic\npip install python-magic\n\n# Windows下安装:\npip install python-magic-bin 0.4.14\n</code></pre>\n<h4 id=\"4.-检测脚本\">4. 检测脚本<a title=\"#4.-检测脚本\" href=\"#4.-检测脚本\"></a></h4>\n<pre><code class=\"language-python\"># coding = utf-8\n# 适用于windows和linux系统环境\n# 检测结果：magic库更可靠更详细，filetype会出现误检测和无结果。\n# 可以检测出视频、音频、图片、压缩文件、PDF文件等被修改后缀的原格式。\n# 注意：Windows下检测路径末尾可以不加'\\'，但是Linux下需要在末尾加'/'否则会报错\n\nimport os\n\nimport filetype\nimport magic\n\n\ndef fdirTraverser(file_dir):\n    &quot;&quot;&quot;\n    简单的文件目录遍历器\n    file_dir：待检测目录地址\n    &quot;&quot;&quot;\n    for root, dirs, files in os.walk(file_dir):\n        print(&quot;当前目录路径：%s\\n&quot; % root)\n        print(&quot;当前路径下所有子目录：%s\\n&quot; % dirs)\n        print(&quot;当前路径下所有非目录子文件：%s\\n&quot; % files)\n\n\ndef getSpecFile(file_dir, file_extension):\n    &quot;&quot;&quot;\n    获取当前路径下除子目录外所有指定后缀的文件名列表（绝对路径）\n    file_dir：待检测目录地址\n    file_extension：指定文件后缀名\n    &quot;&quot;&quot;\n    aa = []\n    for root, dirs, files in os.walk(file_dir):\n        for file in files:\n            # os.path.splitext()函数将路径拆分为文件名+扩展名\n            if os.path.splitext(file)[1] == file_extension:\n                aa.append(os.path.join(root, file))\n        return aa\n\n\ndef getAllFile(path, list_name):\n    &quot;&quot;&quot;\n    递归获取当前路径下所有文件名（绝对路径，包括所有子目录下的文件）\n    path: 待检测目录地址\n    list_name: 存储主目录下所有文件名称的列表（绝对路径）\n    &quot;&quot;&quot;\n\n    b = os.listdir(path)\n    # print(b)\n    for file in b:\n        file_path = os.path.join(path, file)\n        if os.path.isdir(file_path):\n            getAllFile(file_path, list_name)\n        else:\n            list_name.append(file_path)\n\n\ndef ck_ftype(path_list):\n    &quot;&quot;&quot;使用python的ftype和magic库对比判断文件类型&quot;&quot;&quot;\n    for i in path_list:\n        print(&quot;++++*******************START********************++++&quot;)\n        print(&quot;待检测的文件为：%s\\n&quot; % i)\n        # 使用filetype库\n        kind = filetype.guess(i)\n        print(&quot;[+]--------filetype--------[+]&quot;)\n        print(&quot;filetype库检测的文件类型：&quot;)\n        if kind is None:\n            print('[-] 使用filetype库未检测出文件类型！\\n')\n        else:\n            print('文件扩展名: %s，文件MIME类型：%s' % (kind.extension, kind.mime))\n            print(&quot;[+]------------------------[+]\\n&quot;)\n\n        # 使用magic库\n        # bb = magic.from_file(i)\n        # cc = magic.from_file(i, mime=True)\n        bb = magic.from_buffer(open(i, &quot;rb&quot;).read(2048))\n        cc = magic.from_buffer(open(i, &quot;rb&quot;).read(2048), mime=True)\n        print(&quot;[+]------------magic------------[+]&quot;)\n        print(&quot;magic库检测的文件类型：%s，MIME类型：%s&quot; % (bb, cc))\n        print(&quot;[+]-----------------------------[+]\\n&quot;)\n        print(&quot;++++******************END*********************++++\\n\\n&quot;)\n\n\nif __name__ == '__main__':\n    # 支持linux和windows\n    # path = &quot;/home/mycode/test_files/&quot;\n    path = input(&quot;请输入要查询的文件路径：&quot;)\n\n    # 简单的文件、目录遍历\n    fdirTraverser(path)\n\n    # 获取当前路径下除子目录外所有指定后缀的文件名列表（绝对路径）\n    file_extension = &quot;.png&quot;\n    file_list = getSpecFile(path, file_extension)\n    print(&quot;file_list：%s\\n&quot; % file_list)\n\n    # 递归获取当前路径下所有文件名（绝对路径，包括所有子目录下的文件）\n    aa = []\n    getAllFile(path, aa)\n    print(&quot;待检测所有文件列表: %s\\n&quot; % aa)\n\n    # 使用python的ftype和magic库对比判断文件类型\n    ck_ftype(aa)\n</code></pre>\n<h4 id=\"5.-部分检测结果截图\">5. 部分检测结果截图<a title=\"#5.-部分检测结果截图\" href=\"#5.-部分检测结果截图\"></a></h4>\n<p><img src=\"https://raw.githubusercontent.com/Nanzet/nanzet-imgs/master/images/20200917144610.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<p><img src=\"https://raw.githubusercontent.com/Nanzet/nanzet-imgs/master/images/20200917144707.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<p><img src=\"https://raw.githubusercontent.com/Nanzet/nanzet-imgs/master/images/20200917145129.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<p><img src=\"https://raw.githubusercontent.com/Nanzet/nanzet-imgs/master/images/20200917145317.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n","prev":{"title":"解决VScode自动将lambda表达式转换为def的问题","link":"2020/09/23/解决VScode自动将lambda表达式转换为def的问题"},"next":{"title":"VMware中虚拟机扩容","link":"2020/09/16/VMware中虚拟机扩容"},"plink":"https://nanzet.cn/2020/09/17/对比Python的filetype和magic库检测文件类型/","reward":true,"copyright":{"author":"nanzet","link":"<a href=\"https://nanzet.cn/2020/09/17/对比Python的filetype和magic库检测文件类型/\" title=\"对比Python的filetype和magic库检测文件类型\">https://nanzet.cn/2020/09/17/对比Python的filetype和magic库检测文件类型/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"},"reading_time":"1066 字约 7 分钟"}