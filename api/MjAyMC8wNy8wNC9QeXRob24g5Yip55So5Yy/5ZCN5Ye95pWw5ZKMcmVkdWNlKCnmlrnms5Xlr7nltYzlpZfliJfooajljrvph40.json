{"title":"Python 利用匿名函数和reduce()方法对嵌套列表去重","date":"2020-07-04T12:57:00.000Z","date_formatted":{"ll":"2020年7月4日","L":"2020/07/04","MM-DD":"07-04"},"author":"Nanzet","link":"2020/07/04/Python 利用匿名函数和reduce()方法对嵌套列表去重","tags":["python"],"categories":["技术"],"updated":"2022-11-19T15:43:12.598Z","content":"<h4 id=\"1、示例及结果\">1、示例及结果<a title=\"#1、示例及结果\" href=\"#1、示例及结果\"></a></h4>\n<pre><code class=\"language-python\">from functools import reduce\n\n# 待去重嵌套列表（元素为字典）\naa = [&#123;'bigAsset1': '资产1', 'bigAsset2': '资产2'&#125;, &#123;'bigAsset1': '资产2', 'bigAsset2': '资产1'&#125;, &#123;'bigAsset1': '资产3', 'bigAsset2': '资产1'&#125;, &#123;'bigAsset1': '资产1', 'bigAsset2': '资产2'&#125;, &#123;'bigAsset1': '资产2', 'bigAsset2': '资产3'&#125;]\n\n# 待去重嵌套列表（元素为集合）\nbb = [&#123;'资产1', '资产2'&#125;, &#123;'资产2', '资产1'&#125;, &#123;'资产3', '资产1'&#125;, &#123;'资产1', '资产2'&#125;, &#123;'资产2', '资产3'&#125;]\n\ncc = [['资产1', '资产2'], ['资产2', '资产1'], ['资产3', '资产1'], ['资产1', '资产2'], ['资产2', '资产3']]\n\nrun_function = lambda x,y : x if y in x else x + [y]\n\naa = reduce(run_function, [[],] + aa)\nbb = reduce(run_function, [[],] + bb)\ncc = reduce(run_function, [[],] + cc)\n\nprint(aa)\n# [&#123;'bigAsset1': '资产1', 'bigAsset2': '资产2'&#125;, &#123;'bigAsset1': '资产2', 'bigAsset2': '资产1'&#125;, &#123;'bigAsset1': '资产3', 'bigAsset2': '资产1'&#125;, &#123;'bigAsset1': '资产2', 'bigAsset2': '资产3'&#125;]\nprint(bb)\n# [&#123;'资产1', '资产2'&#125;, &#123;'资产3', '资产1'&#125;, &#123;'资产3', '资产2'&#125;]\nprint(cc)\n# [['资产1', '资产2'], ['资产2', '资产1'], ['资产3', '资产1'], ['资产2', '资产3']]\n</code></pre>\n<p> 注意上面不同的两种结果，适用于不同场景。对于上例中若对资产顺序无要求，去重应采用bb的形式。</p>\n<h4 id=\"2、原理分析\">2、原理分析<a title=\"#2、原理分析\" href=\"#2、原理分析\"></a></h4>\n<p> 打开你的IDE调试思路会很清晰，打开之前你可能需要了解这些知识：</p>\n<ul>\n<li><a href=\"https://www.cnblogs.com/shenhongbo/p/11566976.html\" target=\"_blank\">python 匿名函数</a></li>\n<li><a href=\"https://kodango.com/variable-arguments-in-python#comment-231489\" target=\"_blank\">python中的*args、**kwargs</a></li>\n<li><a href=\"https://www.runoob.com/python/python-func-reduce.html\" target=\"_blank\">python reduce()函数</a></li>\n</ul>\n<p> 匿名函数run_function这行的功能实现等同于以下方法：</p>\n<pre><code class=\"language-python\">def run_function(x, y):\n    if y in x:\n        return x\n    else:\n        return x + [y]\n</code></pre>\n<p> 其次，注意两个列表相加的结果，例如：</p>\n<pre><code class=\"language-python\">[[],] + bb\n# [[], &#123;'资产1', '资产2'&#125;, &#123;'资产1', '资产2'&#125;, &#123;'资产3', '资产1'&#125;, &#123;'资产1', '资产2'&#125;, &#123;'资产3', '资产2'&#125;]\n</code></pre>\n","prev":{"title":"解决VS Code安装Python扩展后自动下载microsoft python language server缓慢的问题","link":"2020/07/07/解决VS Code安装Python扩展后自动下载microsoft python language server缓慢的问题"},"next":{"title":"V2Ray安装教程（初阶）","link":"2020/07/04/V2Ray安装教程（初阶）"},"plink":"https://nanzet.cn/2020/07/04/Python 利用匿名函数和reduce()方法对嵌套列表去重/","reward":true,"copyright":{"author":"Nanzet","link":"<a href=\"https://nanzet.cn/2020/07/04/Python 利用匿名函数和reduce()方法对嵌套列表去重/\" title=\"Python 利用匿名函数和reduce()方法对嵌套列表去重\">https://nanzet.cn/2020/07/04/Python 利用匿名函数和reduce()方法对嵌套列表去重/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"},"reading_time":"408 字约 3 分钟"}